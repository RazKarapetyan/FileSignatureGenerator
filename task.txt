Signature
It is required to write a C++ console program to generate the signature of the specified file.

The signature is generated as follows: the source file is divided into blocks equal to
(fixed) length (if the file size is not a multiple of the block size, the last fragment may
be less than or padded with zeros to the size of a full block). For each block is calculated
the hash value of the function and is added to the output signature file.

Interface: command line, which specifies:
 Path to input file
 Path to the output file
 Block size (default, 1 Mb)

Mandatory requirements:
 It is necessary to optimize the speed of the utility as much as possible, taking into account the work in
multiprocessor environment
 Need to implement proper error handling based on exceptions
 When working with resources, you need to use smart pointers
 It is not allowed to use third-party libraries OpenMP, OpenCL, etc.
 The program must work correctly in Linux under x86 and x64 architectures.
Additional requirements:
 The task should not contain unused code (as well as other options
task completion);
 It is better to give preference to the OOP approach over the functional one.
Assumptions:
 The size of the input file can be much larger than the size of the available physical memory
(&gt; 4 GB)
 It is allowed to use boost
 As a hash function, you can use any hash function (MD5, CRC, etc.)

Note: Please send the entire project, not just the source codes.
